# ExoplanetAI Production Dockerfile
# Multi-stage build –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# 
# –≠—Ç–∞–ø—ã —Å–±–æ—Ä–∫–∏:
# 1. Frontend build - —Å–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# 2. Backend production - Python –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å React build
# 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ security hardening

# ===== STAGE 1: Frontend Build =====
FROM node:18-alpine AS frontend-builder

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL stage=frontend-builder
LABEL description="Building React frontend for ExoplanetAI"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Å–±–æ—Ä–∫–∏
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è frontend
WORKDIR /app/frontend

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ package files –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY frontend/package*.json ./

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
RUN npm ci --only=production --silent --no-audit --no-fund \
    && npm cache clean --force

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ frontend
COPY frontend/ ./

# –°–±–æ—Ä–∫–∞ production build
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV INLINE_RUNTIME_CHUNK=false

RUN npm run build

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
RUN ls -la dist/ && \
    test -f dist/index.html && \
    echo "‚úÖ Frontend build successful"

# ===== STAGE 2: Backend Production =====
FROM python:3.11-slim AS backend-production

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL maintainer="ExoplanetAI Team"
LABEL version="2.0.0"
LABEL description="ExoplanetAI Production Backend with React Frontend"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    curl \
    wget \
    git \
    # –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä—ã –¥–ª—è Python –ø–∞–∫–µ—Ç–æ–≤
    gcc \
    g++ \
    make \
    # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
    libffi-dev \
    libssl-dev \
    libblas-dev \
    liblapack-dev \
    libatlas-base-dev \
    # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    libcfitsio-dev \
    wcslib-dev \
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ root –ø—Ä–∞–≤
RUN groupadd -r exoplanet && \
    useradd -r -g exoplanet -d /app -s /bin/bash exoplanet && \
    mkdir -p /app && \
    chown -R exoplanet:exoplanet /app

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER exoplanet

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ requirements –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY --chown=exoplanet:exoplanet backend/requirements.txt ./

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN pip install --user --no-cache-dir -r requirements.txt && \
    pip install --user --no-cache-dir \
    gunicorn==21.2.0 \
    uvicorn[standard]==0.24.0

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –ø–∞–∫–µ—Ç–∞–º
ENV PATH="/app/.local/bin:$PATH"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ backend –∫–æ–¥–∞
COPY --chown=exoplanet:exoplanet backend/ ./

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ React build –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ stage
COPY --from=frontend-builder --chown=exoplanet:exoplanet /app/frontend/dist ./frontend/dist

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
RUN mkdir -p logs data cache temp && \
    chmod 755 logs data cache temp

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
RUN echo "üìÅ Project structure:" && \
    ls -la && \
    echo "üìÅ Frontend build:" && \
    ls -la frontend/dist/ && \
    echo "‚úÖ All files copied successfully"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN python -c "import fastapi, uvicorn, redis, jwt, pydantic; print('‚úÖ Core dependencies OK')" && \
    python -c "import numpy, pandas, scipy, sklearn; print('‚úÖ Scientific dependencies OK')" && \
    python -c "import lightkurve, astropy, astroquery; print('‚úÖ Astronomy dependencies OK')" || \
    echo "‚ö†Ô∏è  Some astronomy dependencies may be missing (will be installed on first run)"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
ENV PYTHONPATH=/app \
    ENVIRONMENT=production \
    SERVER_HOST=0.0.0.0 \
    SERVER_PORT=8001

# –ü–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
EXPOSE 8001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ production —Å–µ—Ä–≤–µ—Ä–∞
CMD ["gunicorn", "main_production:app", \
     "--worker-class", "uvicorn.workers.UvicornWorker", \
     "--workers", "4", \
     "--bind", "0.0.0.0:8001", \
     "--timeout", "120", \
     "--keepalive", "5", \
     "--max-requests", "1000", \
     "--max-requests-jitter", "100", \
     "--preload", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "--log-level", "info"]

# ===== STAGE 3: Development Override (optional) =====
FROM backend-production AS development

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ root –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
USER root

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ development –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER exoplanet

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ development Python –ø–∞–∫–µ—Ç–æ–≤
RUN pip install --user --no-cache-dir \
    pytest==7.4.3 \
    pytest-asyncio==0.21.1 \
    black==23.11.0 \
    isort==5.12.0 \
    mypy==1.7.1

# Override –¥–ª—è development —Ä–µ–∂–∏–º–∞
ENV ENVIRONMENT=development \
    SERVER_RELOAD=true \
    LOG_LEVEL=DEBUG

# Development –∫–æ–º–∞–Ω–¥–∞ —Å hot reload
CMD ["python", "main_production.py"]
