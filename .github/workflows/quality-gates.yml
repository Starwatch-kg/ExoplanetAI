name: Quality Gates
on: 
  push:
    branches: [main, master, backend, frontend]
  pull_request:
    branches: [main, master]

jobs:
  backend-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8 mypy bandit safety pytest pytest-asyncio
          
      - name: Format check (Black)
        run: black --check --diff .
        
      - name: Import sorting (isort)
        run: isort --check-only --diff .
        
      - name: Linting (flake8)
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
      - name: Type checking (mypy)
        run: mypy . --ignore-missing-imports --no-strict-optional
        
      - name: Security scan (bandit)
        run: bandit -r . -f json -o bandit-report.json || true
        
      - name: Dependency security (safety)
        run: safety check --json --output safety-report.json || true
        
      - name: Run tests
        run: |
          python -c "import main; print('âœ… Main module imports successfully')"
          
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            backend/bandit-report.json
            backend/safety-report.json

  frontend-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type checking
        run: npm run type-check
        
      - name: Linting
        run: npm run lint
        
      - name: Security audit
        run: npm audit --audit-level=high
        
      - name: Build check
        run: npm run build
